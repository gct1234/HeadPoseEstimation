function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-May-2022 15:48:40.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx10 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx10 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.617210682492582;0.787425149700599;0;0.0674157303370787;0;0.671916010498688;0.602006688963211;0.613924050632911;0.659340659340659;0];
x1_step1.gain = [5.22480620155039;9.40845070422535;2;2.14457831325301;2;6.096;5.02521008403361;5.18032786885246;5.87096774193548;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.7269696245445756;-0.13552703943623282;0.019452125565875784;0.0031494736203612778;-0.061442002476965171;-0.047964185234764145;-0.035341356316260536;0.050611882034085356;-0.0069856605438735802;0.064867116707878703];
IW1_1 = [0.41515939029853199 0.32047087450531586 0.58845785524858174 -0.030347827963127197 2.5957818765650828e-05 -1.0180625112396815 0.3421335108864475 -0.26911274795338608 0.16041342604913247 -0.26224805072423196;0.1013851400802276 -0.15597424415675834 -0.005152657947321092 0.084904322399002835 -0.040066773695553941 0.12162710090406789 0.096514927749322285 -0.31018684398219143 -0.11327912499873646 -0.0066773187550129192;0.032037489550026103 -0.0065560358783447181 0.0028149982172550126 0.0014965960948446759 0.007396272641566181 -0.033331020636986113 -0.16224228909737601 0.07354078187314729 0.07217960248968773 1.4078513659279024;0.083855891290289489 -0.0075104490815571063 -0.020351871185368686 -0.013057356718932952 0.1216434610842886 0.121257747992394 0.011478576028217129 -0.18596534796504843 -0.027048643420609895 -0.014443715396626406;0.20148112769983884 -0.031546006269273161 -0.019199264886217478 -0.090929169258987558 -0.063939229133609138 -0.083123741387708699 -0.12059777850942084 -0.073070229807603942 -0.055980538605806221 -0.041291543875379332;-0.0078461791064084099 -0.02991947504181984 -0.097891366052777193 0.017615355070650606 0.0099155372160288479 0.018402398687945465 -0.26437880700785676 0.1782798171312332 0.18776751936749683 0.056785242370364968;0.011481606376077532 0.059264230367271555 -0.10085825357477884 -0.0088843553131522039 -0.0011611631515633346 0.048661588770691239 0.24860188211258677 -0.21505566680392621 -0.1571979182567444 0.00079111155191787159;0.071145622824829141 -0.096899408400780707 -0.045748910517828263 -0.026060006140477075 0.069095531625691695 -0.42812823128391314 0.027163212226141036 0.52517354138137984 0.0165134745354759 0.029430072235228685;-0.29859023658442602 -0.061860442649737057 -0.010281909259853327 -0.088553526900526994 -0.03295895610751863 0.073850264151387873 -0.0070812209684249419 0.11661655161661062 0.1092316222988014 0.018241614348352198;0.19889134246276971 -0.047866019606059691 0.023307849453378861 -0.027313373709080532 -0.041693532159792684 0.21945252914340807 0.21321158485864886 -0.3269042108105546 -0.090115753450504488 0.078069603185925027];

% Layer 2
b2 = [-0.42228588616170953;-0.30847204495110925;0.057457625321452897;0.11394451341572964;0.0054392938670514536;-0.73462942514804552;-0.25642279361915643;-0.68868442397293184;-0.0044081761981012704;-0.01511142641199119];
LW2_1 = [-0.11249279802557215 -1.0344859794110908 -0.30913074481091568 -0.32191346854633651 0.13077602265891258 1.2593287439796599 -0.63941847970823218 0.67663666832228198 -1.7951591136552072 2.699413753122911;0.092969528214827901 -3.6946738197168578 0.0379017732423498 -1.2611522685606384 -0.55761994791870084 0.033291196374789014 1.481694547505344 -1.6387432530824892 -2.404165454391483 -0.13298924676624899;0.59376576100330636 -0.66258392632839236 0.22521179162616833 0.1849594567387248 -0.62729288711346276 -4.335929278791907 -5.1287930562539801 -0.57349446641515578 -0.38501267109145604 0.61306589333440764;-0.18223856167134106 2.7047120772507842 -0.077287070181794329 -2.4502187038965144 -3.8713672478082053 1.4429150620395286 -0.09049639501521696 -0.46037760780018916 -3.5114778480486204 -1.4523600772567602;0.17187853545441212 -0.28605337191772112 0.22705224661448922 6.4796376651476253 -1.2301494754845101 -1.1726008552587255 -0.74748932424363335 1.0202144672866742 0.075869749152912169 -1.6061238249032226;-0.43133675594608623 -0.93187497392210916 -0.40999054863965434 -0.027276387239710397 -1.5345924422290209 1.5965811443293425 -0.48029631288729963 -0.37705069325690327 0.33378647886283169 2.6843183010136364;0.14283330205696823 -0.72021045361189362 -0.35305804160179055 -0.91228942784426603 -1.8646481773400538 -0.15329417635306525 0.79576797870575244 1.0802839238545421 0.1714938473392347 2.4658264487496502;-0.33413827681936831 -1.1174279903403259 -0.33263532936052226 -1.1088031243470557 -1.3215777565320923 0.9421974315125119 -0.40502141827207078 0.94251398534132658 -0.15571562190950927 1.7944453349053064;0.3060423877555597 -1.0895113869915274 -0.37527893936043349 -0.45719086236113649 -1.1907949368916333 1.785004258876308 -0.8952519644153708 0.11660861139247082 0.005080143335832856 2.1266297229264395;-0.0065821213997236932 0.0040728967541003016 1.1248381219746546 -0.018817570308924243 -0.038882606409385047 -0.045303306468983257 0.059743914281568875 0.011302243109591711 0.023008491343172271 0.0293320805662152];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [5.22480620155039;9.40845070422535;2;2.14457831325301;2;6.096;5.02521008403361;5.18032786885246;5.87096774193548;2];
y1_step1.xoffset = [0.617210682492582;0.787425149700599;0;0.0674157303370787;0;0.671916010498688;0.602006688963211;0.613924050632911;0.659340659340659;0];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
